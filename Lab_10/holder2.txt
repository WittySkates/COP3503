#include "WordInfo.h"
#include <iostream>
#include <string>
#include <vector>
#include <fstream>
#include <sstream>
#include <map>
#include <unordered_map>
#include <cctype>
#include <algorithm>

WordInfo::WordInfo() {}

char unwantedSouls[] = {'.', ',', '\'' , '"', ':', '-', '?', '!', '0', '1', '3', '4',
                        '5', '6', '7', '8', '9', '$', '#','\n' };

void WordInfo::ReadWordsFromFile(const char *filename) {
    string name = filename;
    ifstream file(name);
    string word;

    while(file >> word){
        allWords.push_back(word);
    }
    for(unsigned int i = 0; i < allWords.size(); i++){
        word = allWords[i];
        for(unsigned int j = 0; j < word.length(); j++){
            if(word.at(j) >= 65 && word.at(j) <= 90){
                word.at(j) = tolower(word.at(j));
            }
            else if(word.at(j) >= 90 && word.at(j) <= 122){
                continue;
            }
        }
    }
    for(int i = 0; i < allWords.size(); i++){
        cout << allWords.at(i) << " ";
    }
    cout << allWords.size();
    file.close();
}

void WordInfo::DisplayStats() const {
    cout << endl;
    cout << totalWords << endl;
    cout << words.size();
}

void WordInfo::MostCommonWords(int count, bool ignoreCommonFile) const {}
void WordInfo::LongestWords(vector<string> &words) const {}
void WordInfo::SetIgnoreWords(vector<string> &ignore) {}
int WordInfo::SearchForWords(const char &word) const {
    return 0;
}

#include "WordInfo.h"
#include <iostream>
#include <string>
#include <vector>
#include <fstream>
#include <sstream>
#include <map>
#include <unordered_map>
#include <cctype>
#include <algorithm>

WordInfo::WordInfo() {}

char unwantedSouls[] = {'.', ',', '\'' , '"', ':', '-', '?', '!', '0', '1', '3', '4',
                        '5', '6', '7', '8', '9', '$', '#','\n' };

void WordInfo::ReadWordsFromFile(const char *filename) {
    string name = filename;
    ifstream file(name);
    string word;

    while(file >> word){
        allWords.push_back(word);
    }
    for(unsigned int i = 0; i < allWords.size(); i++){
        for(unsigned int j = 0; j < allWords[i].length(); j++){
            if(allWords[i][j] >= 65 && allWords[i][j] <= 90){
                allWords[i][j] = tolower(allWords[i][j]);
            }
            else if(allWords[i][j] >= 90 && allWords[i][j] <= 122){
                allWords[i].erase(allWords[i][j]);
            }
        }
    }
    for(int i = 0; i < allWords.size(); i++){
        cout << allWords.at(i) << " ";
    }
    cout << allWords.size();
    file.close();
}

void WordInfo::DisplayStats() const {
    cout << endl;
    cout << totalWords << endl;
    cout << words.size();
}

void WordInfo::MostCommonWords(int count, bool ignoreCommonFile) const {}
void WordInfo::LongestWords(vector<string> &words) const {}
void WordInfo::SetIgnoreWords(vector<string> &ignore) {}
int WordInfo::SearchForWords(const char &word) const {
    return 0;
}