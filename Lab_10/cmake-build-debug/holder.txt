#include "WordInfo.h"
#include <iostream>
#include <string>
#include <vector>
#include <fstream>
#include <sstream>
#include <map>
#include <unordered_map>
#include <cctype>
#include <algorithm>

WordInfo::WordInfo() {}

char unwantedSouls[] = {'.', ',', '\'' , '"', ':', '-', '?', '!', '0', '1', '3', '4',
                        '5', '6', '7', '8', '9', '$', '#','\n' };

void WordInfo::ReadWordsFromFile(const char *filename) {
    string name = filename;
    ifstream file(name);
    if(file.is_open()){
        totalWords = 0;
        string line;
        while(getline(file, line, ' ')) {
            for(int i = 0; i < sizeof(unwantedSouls); i++ ) {
                line.erase(remove(line.begin(), line.end(),  unwantedSouls[i]), line.end());
            }
            for(int i = 0 ; i < line.length(); i++){
                line[i] = tolower(line[i]);
            }

            if(line.length() > 0) {
                auto found = words.find(line);
                if (found != words.end()) {
                    found->second += 1;
                    totalWords++;
                }
                else{
                    words.emplace(line, 1);
                    totalWords++;
                }
            }

        }
    }
    map<string, int>::iterator itr;
    for(itr = words.begin(); itr != words.end(); itr++){
        cout << itr->first;
        cout << "\t" << itr->second << endl;
    }
    file.close();
}

void WordInfo::DisplayStats() const {
    cout << endl;
    cout << totalWords << endl;
    cout << words.size();
}

void WordInfo::MostCommonWords(int count, bool ignoreCommonFile) const {}
void WordInfo::LongestWords(vector<string> &words) const {}
void WordInfo::SetIgnoreWords(vector<string> &ignore) {}
int WordInfo::SearchForWords(const char &word) const {
    return 0;
}